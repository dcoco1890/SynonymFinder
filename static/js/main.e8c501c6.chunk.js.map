{"version":3,"sources":["img/mwlogo.jpg","utils/API.js","comps/ShortDef.js","comps/Stem.js","comps/Word.js","comps/SynAntList.js","comps/TotalCard.js","comps/ImgMW.js","comps/Button.js","comps/InForm.js","pages/Lookup.js","pages/Home/Home.js","comps/EngSpan.js","pages/Translation.js","comps/Main.js","comps/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","word","axios","get","process","ShortDef","props","def","map","item","key","className","Stem","stems","Word","syn","SynAntList","syns","ants","StyledDiv","styled","div","Heading","h5","Paragraph","p","StyleButt","button","TotalCard","onClick","close","part","short","ImgMW","src","logo","alt","Button","StyledForm","form","StyledLabel","label","InForm","page","value","handleChange","handleClick","type","name","onChange","Lookup","useState","setWord","query","setQuery","data","setData","notFound","setNotFound","shouldMakeCall","setShouldMakeCall","useEffect","API","then","resp","info","catch","err","console","log","e","target","preventDefault","i","num","meta","uuid","hwi","hw","fl","shortdef","length","itemNumToRemove","old","splice","removeData","Home","id","children","styles","main","display","gridTemplateColumns","arrow","margin","width","left","textAlign","right","flexcen","justifyContent","Untranslated","speechPart","Translated","words","EngSpan","style","srclan","translan","defs","Translation","shouldCall","unShouldCall","lang","Main","exact","path","render","component","Nav","ul","listStyle","boxShadow","marginBottom","padding","background","li","fontSize","to","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e8c501c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mwlogo.f5d951bd.jpg\";","import axios from \"axios\";\r\n\r\nexport default {\r\n  getSyn: function(word) {\r\n    return axios.get(\r\n      `https://www.dictionaryapi.com/api/v3/references/thesaurus/json/${word}?key=${process.env.REACT_APP_THESAURUS}`\r\n    );\r\n  },\r\n\r\n  getTrans: function(word) {\r\n    return axios.get(\r\n      `https://www.dictionaryapi.com/api/v3/references/spanish/json/${word}?key=${process.env.REACT_APP_SPANGLISH}`\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst ShortDef = props => (\r\n  <div>\r\n    {props.def.map(item => (\r\n      <p key={item} className=\"font-weight-lighter m-0\">\r\n        {item}\r\n      </p>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default ShortDef;\r\n","import React from 'react';\r\n\r\nconst Stem = props => (\r\n  <div className='col-md-4'>\r\n    <p>Similar</p>\r\n    <ul className=\"list-group\">\r\n    {props.stems.map(item => (\r\n      <li className=\"list-group-item\" key={item}>\r\n        {item}\r\n      </li>\r\n    ))}\r\n   </ul>\r\n  </div>\r\n);\r\n\r\nexport default Stem;\r\n\r\n","import React from 'react';\r\n\r\nconst Word = props => (\r\n    <div className={props.syn ? 'syn' : 'ant'}>\r\n        <h5>{props.word}</h5>\r\n    </div>\r\n)\r\nexport default Word;","import React from 'react';\r\nimport Word from '../comps/Word';\r\n\r\nconst SynAntList = props => (\r\n\r\n        <div className='col-md-4'>\r\n            {props.syns ? <p>Synonyms</p> : <p>Antonyms</p>}\r\n            {props.syns ? props.syns.map(item => (\r\n                <Word syn={true} word={item} key={item} />\r\n            )) : props.ants.map(item => (\r\n                <Word word={item} key={item} />\r\n            ))}\r\n        </div>\r\n\r\n)\r\n\r\nexport default SynAntList;","import React from \"react\";\r\nimport ShortDef from \"../comps/ShortDef\";\r\nimport styled from \"styled-components\";\r\nimport Stem from \"./Stem\";\r\nimport SynAntList from \"../comps/SynAntList\";\r\n\r\nconst StyledDiv = styled.div`\r\n  text-align: left;\r\n  display: inline-block;\r\n  padding: 0.25rem 0.55rem;\r\n  margin-bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n`;\r\n\r\nconst Heading = styled.h5`\r\n  display: inline;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  font-style: italic;\r\n  display: inline;\r\n`;\r\n\r\nconst StyleButt = styled.button`\r\n  border: none;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: 1px solid #212529;\r\n  float: right;\r\n  margin-top: 0.25rem;\r\n  margin-right: 0.25rem;\r\n`;\r\n\r\nconst TotalCard = props => (\r\n  <div className=\"card\">\r\n    <StyledDiv>\r\n      <StyleButt onClick={props.close}>X</StyleButt>\r\n      <Heading>{props.word}</Heading>{\" \"}\r\n      <Paragraph className=\"font-italic\">({props.part})</Paragraph>{\" \"}\r\n      <ShortDef def={props.short} />\r\n    </StyledDiv>\r\n    <div className=\"card-body\">\r\n      <div className=\"card-text\">\r\n        <div className=\"row\">\r\n          <Stem stems={props.stems} />\r\n          <SynAntList syns={props.syns} />\r\n          <SynAntList ants={props.ants} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TotalCard;\r\n","import React from 'react';\r\nimport logo from '../img/mwlogo.jpg'\r\n\r\nconst ImgMW = () => (\r\n    <div className='img-spot'>\r\n        <p>Powered By:</p>\r\n        <img src={logo} alt='merriam-webster-logo'/>\r\n    </div>\r\n)\r\n\r\nexport default ImgMW;","import React from \"react\";\r\n\r\nconst Button = props => (\r\n  <button className=\" btn btn-outline-primary\" onClick={props.onClick}>\r\n    Submit\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../comps/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  margin-top: 6rem;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst InForm = ({ page, value, handleChange, handleClick }) => (\r\n  <StyledForm className=\"form-inline\">\r\n    <StyledLabel>\r\n      <h1 className=\"pr-2\">{page}</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        name=\"word\"\r\n        className=\"form-control\"\r\n        onChange={handleChange}\r\n      />{\" \"}\r\n      <Button onClick={handleClick} />\r\n    </StyledLabel>\r\n  </StyledForm>\r\n);\r\n\r\nexport default InForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport TotalCard from \"../comps/TotalCard\";\r\nimport ImgMW from \"../comps/ImgMW\";\r\nimport InForm from \"../comps/InForm\";\r\n\r\nconst Lookup = () => {\r\n  // need both or the API will be called on every changed letter.\r\n  const [word, setWord] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  // This just shows some text if the word searched for does not display anything.\r\n  const [notFound, setNotFound] = useState(false);\r\n  // This guy will make sure useEffect does not run when the page loads, only after we've entered a query.\r\n  const [shouldMakeCall, setShouldMakeCall] = useState(false);\r\n\r\n  //\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setQuery(word);\r\n    setShouldMakeCall(true);\r\n    setWord(\"\");\r\n  };\r\n\r\n  const handleChange = e => setWord(e.target.value);\r\n  // This function lets me append new info to the top of the stack so old Syns aren't lost (until the page reloads)\r\n  const updateData = info => setData(data => [...info, ...data]);\r\n\r\n  // Removes elements from list\r\n\r\n  const removeData = itemNumToRemove => {\r\n    let old = data;\r\n    console.log(old);\r\n    old.splice(itemNumToRemove, 1);\r\n    console.log(old);\r\n    setData(() => [...old]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldMakeCall) {\r\n      API.getSyn(query)\r\n        .then(resp => {\r\n          if (typeof resp.data[0] === \"string\") {\r\n            setNotFound(true);\r\n          } else {\r\n            setNotFound(false);\r\n            updateData(resp.data);\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, [shouldMakeCall, query]);\r\n\r\n  // Might be a better fix for this, but if there's no antonyms show this instead\r\n  const ants = [\"None Found\"];\r\n\r\n  return (\r\n    <div>\r\n      <InForm\r\n        page={\"Synonym Finder: \"}\r\n        value={word}\r\n        handleChange={handleChange}\r\n        handleClick={handleClick}\r\n      />\r\n      {notFound && (\r\n        <small className=\"form-text text-muted text-uppercase font-weight-bold\">\r\n          Nothing found, did you spell everything correctly?\r\n        </small>\r\n      )}\r\n\r\n      <div className=\"container\">\r\n        {data.map((item, i) => {\r\n          const num = i;\r\n          return (\r\n            <div key={item.meta.uuid}>\r\n              <TotalCard\r\n                word={item.hwi.hw}\r\n                part={item.fl}\r\n                short={item.shortdef}\r\n                stems={item.meta.stems}\r\n                syns={item.meta.syns[0]}\r\n                ants={item.meta.ants.length ? item.meta.ants[0] : ants}\r\n                close={() => removeData(num)}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <ImgMW />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lookup;\r\n","import React from \"react\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home = props => (\r\n  <div className=\"jumbotron\" id=\"jumbo-home\">\r\n    <h1 className=\"display-3\" id=\"main-text-00\">\r\n      Synonym Finder\r\n    </h1>\r\n    <h1 className=\"display-4\" id=\"main-text-01\">\r\n      & Translator\r\n    </h1>\r\n\r\n    <hr className=\"my-4\" />\r\n\r\n    <h5>Quickly and almost instantly find synoyms and antonyms for any word</h5>\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n`;\r\n\r\nconst styles = {\r\n  main: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr\"\r\n  },\r\n  arrow: {\r\n    margin: \"0 auto\",\r\n    width: \"5rem\"\r\n  },\r\n  left: {\r\n    textAlign: \"left\"\r\n  },\r\n  right: {\r\n    textAlign: \"right\"\r\n  },\r\n  flexcen: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  p: {\r\n    display: \"inline\"\r\n  }\r\n};\r\n\r\nconst Untranslated = ({ word, speechPart }) => (\r\n  <div>\r\n    <h3>{word}</h3>\r\n    <p className=\"font-italic\">{speechPart}</p>\r\n  </div>\r\n);\r\n\r\nconst Translated = props => {\r\n  return (\r\n    <div>\r\n      {props.words.map(word => (\r\n        <h5 key={word}>{word}</h5>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EngSpan = props => (\r\n  <div className=\"card\">\r\n    <StyledDiv className=\"card-header\">\r\n      <h5 style={styles.left}>{props.srclan}</h5>\r\n      <h5 style={styles.right}>{props.translan}</h5>\r\n    </StyledDiv>\r\n    <div className=\"card-body\" style={styles.main}>\r\n      <Untranslated word={props.word} speechPart={props.speechPart} />\r\n\r\n      <Translated words={props.defs} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default EngSpan;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport InForm from \"../comps/InForm\";\r\nimport EngSpan from \"../comps/EngSpan\";\r\nimport API from \"../utils/API\";\r\nimport ImgMW from \"../comps/ImgMW\";\r\n\r\nconst Translation = () => {\r\n  const [word, setWord] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [notFound, setNotFound] = useState(false);\r\n  // stops useeffect from running before query\r\n  const [shouldCall, unShouldCall] = useState(false);\r\n\r\n  // Defining Handlers to make components below cleaner looking\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setWord(e.target.value);\r\n  };\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setQuery(word);\r\n    unShouldCall(true);\r\n    setWord(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldCall) {\r\n      API.getTrans(query)\r\n        .then(resp => {\r\n          if (typeof resp.data[0] === \"string\") {\r\n            setNotFound(true);\r\n          } else {\r\n            setNotFound(false);\r\n            setData(resp.data);\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, [shouldCall, query]);\r\n\r\n  return (\r\n    <div>\r\n      <InForm\r\n        page={\"Translation: \"}\r\n        value={word}\r\n        handleChange={handleChange}\r\n        handleClick={handleClick}\r\n      />\r\n      {notFound && (\r\n        <small className=\"form-text text-muted text-uppercase font-weight-bold\">\r\n          Nothing found, did you spell everything correctly?\r\n        </small>\r\n      )}\r\n\r\n      {data.map(item => {\r\n        return (\r\n          <EngSpan\r\n            srclan={item.meta.lang === \"en\" ? \"English\" : \"Spanish\"}\r\n            translan={item.meta.lang === \"en\" ? \"Spanish\" : \"English\"}\r\n            speechPart={item.fl}\r\n            word={item.hwi.hw}\r\n            defs={item.shortdef}\r\n            key={item.meta.uuid}\r\n          />\r\n        );\r\n      })}\r\n      <ImgMW />\r\n    </div>\r\n  );\r\n};\r\n\r\n// class Translation extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       word: \"\",\r\n//       data: [],\r\n//       notFound: false\r\n//     };\r\n//   }\r\n\r\n//   handleClick = e => {\r\n//     //click stuff for translations\r\n//     e.preventDefault();\r\n//     API.getTrans(this.state.word)\r\n//       .then(resp => {\r\n//         console.log(resp.data);\r\n//         if (typeof resp.data[0] === \"string\") {\r\n//           this.setState({\r\n//             notFound: true,\r\n//             data: []\r\n//           });\r\n//         } else {\r\n//           this.setState({\r\n//             notFound: false,\r\n//             data: resp.data\r\n//           });\r\n//         }\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(err);\r\n//         this.setState({\r\n//           notFound: true,\r\n//           data: []\r\n//         });\r\n//       });\r\n//   };\r\n\r\n//   // input stuff\r\n//   handleChange = event => {\r\n//     const target = event.target;\r\n//     const value = target.value;\r\n//     const name = target.name;\r\n//     this.setState({\r\n//       [name]: value\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <InForm\r\n//           page={\"Translation: \"}\r\n//           value={this.state.value}\r\n//           handleChange={this.handleChange}\r\n//           handleClick={this.handleClick}\r\n//         />\r\n//         {this.state.notFound && (\r\n//           <small className=\"form-text text-muted text-uppercase font-weight-bold\">\r\n//             Nothing found, did you spell everything correctly?\r\n//           </small>\r\n//         )}\r\n//         <div className=\"container\">\r\n//           {this.state.data.map(item => {\r\n//             return (\r\n//               <EngSpan\r\n//                 srclan={item.meta.lang === \"en\" ? \"English\" : \"Spanish\"}\r\n//                 translan={item.meta.lang === \"en\" ? \"Spanish\" : \"English\"}\r\n//                 speechPart={item.fl}\r\n//                 word={item.hwi.hw}\r\n//                 defs={item.shortdef}\r\n//               />\r\n//             );\r\n//           })}\r\n//         </div>\r\n//         <ImgMW />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Translation;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Lookup from \"../pages/Lookup\";\r\nimport Home from \"../pages/Home/Home\";\r\nimport Translation from \"../pages/Translation\";\r\nimport ImgMW from \"../comps/ImgMW\";\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={() => (\r\n          <Home>\r\n            <ImgMW />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route exact path=\"/lookup\" component={Lookup} />\r\n      <Route exact path=\"/translate\" component={Translation} />\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Nav() {\r\n  const styles = {\r\n    ul: {\r\n      display: \"flex\",\r\n      listStyle: \"none\",\r\n      boxShadow: \"1px 1px 5px rgba(0,0,0,0.6)\",\r\n      marginBottom: \"2.5rem\",\r\n      padding: 0,\r\n      background:\r\n        \"linear-gradient(10deg, rgba(253,29,146,1) 0%, rgba(252,139,69,1) 100%)\"\r\n    },\r\n    li: {\r\n      fontSize: \"1.4rem\",\r\n      padding: \".9rem 1.4rem\"\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"fixed-top\">\r\n        <ul style={styles.ul}>\r\n          <Link to=\"/\">\r\n            <li style={styles.li}>Home</li>\r\n          </Link>\r\n          <Link to=\"/lookup\">\r\n            <li style={styles.li}>Lookup</li>\r\n          </Link>\r\n          <Link to=\"/translate\">\r\n            <li style={styles.li}>Translator</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Main from '../src/comps/Main';\r\nimport Nav from './comps/Nav';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Nav />\r\n     <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}